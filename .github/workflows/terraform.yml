
name: Terraform Apply

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'infra/remote/**' # Trigger only on changes within this subdirectory

      - '.github/workflows/terraform.yml'
jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: terraform # If using an environment secret
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0 # Specify your desired Terraform version
      - name: Set up Terraform plugin cache directory
        run: echo "TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache/" >> $GITHUB_ENV
      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache/
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
      - name: Terraform Init
        run: terraform init
        working-directory: ./infra/remote # Path to your Terraform subdirectory


      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./infra/remote
        env:
          # Define any necessary environment variables for your Terraform deployment
          TF_VAR_region: ${{ secrets.REGION }} # Map GitHub secret to Terraform variable
          TF_VAR_db_user: ${{ secrets.DB_USER }} # Map GitHub secret to Terraform variable
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }} # Map GitHub secret to Terraform variable
          TF_VAR_db_name: ${{ secrets.DB_NAME }} # Map GitHub secret to Terraform variable
          TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }} # Map GitHub secret to Terraform variable
          TF_VAR_db_port: ${{ secrets.DB_PORT }} # Map GitHub secret to Terraform variable

      - name: Terraform Apply
        run: terraform apply tfplan
        working-directory: ./infra/remote
        env:
          # Define any necessary environment variables for your Terraform deployment
          TF_VAR_region: ${{ secrets.REGION }} # Map GitHub secret to Terraform variable
          TF_VAR_db_user: ${{ secrets.DB_USER }} # Map GitHub secret to Terraform variable
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }} # Map GitHub secret to Terraform variable
          TF_VAR_db_name: ${{ secrets.DB_NAME }} # Map GitHub secret to Terraform variable
          TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }} # Map GitHub secret to Terraform variable
          TF_VAR_db_port: ${{ secrets.DB_PORT }} # Map GitHub secret to Terraform variable
